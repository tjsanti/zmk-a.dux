/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <230>;
};

/ { 

    combos {
        compatible = "zmk,combos";
        combo_tab {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp TAB>;
        };
        
        combo_bspc {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp BSPC>;
        };
        
        combo_apos {
            timeout-ms = <50>;
            key-positions = <18 19>;
            bindings = <&kp APOS>;
        };
        
    };

        keymap {
                compatible = "zmk,keymap";
                
       		default_layer {
		bindings = <
		&kp MINUS &kp F &kp M &kp G &kp Q 						       &kp Z &kp DOT  &kp X    &kp J   &kp SEMI 
		&mt LCTRL R &mt LALT S &mt LGUI N &mt LSHFT T &kp P 			   &kp CMMA &mt RSHFT A &mt RGUI E &mt RALT I &mt RCTRL H
		&kp V &kp C &kp L &kp D &kp B				               &kp K &kp U  &kp O &kp Y &kp W
          				&kp RET &kp SPACE  				&to 1 &kp RSHIFT  
		>;
		};

       		left_layer {
		bindings = <
		&kp TILDE   &kp EXCL    &kp MINUS   &kp PLUS    &kp DOWN		       &kp UP &kp STAR &kp FSLH &kp EQUAL &kp NUM_0 
		&mt LCTRL AMPS &mt LALT LBRC &mt LGUI LBKT &mt LSHFT LPAR &kp LT 			   &kp GT &mt RSHFT RPAR &mt RGUI RBKT &mt RALT RBRC &mt RCTRL PIPE
		&kp BSLH    &trans 	&trans &trans  &kp LEFT 	                       &kp RIGHT &kp APOS &trans &kp QMARK &kp DEL 
					                    &trans &to 0                    &to 2 &trans 
		>;
		};
		
		right_layer {
		bindings = <
		&trans  &trans &trans  &trans  &trans    			&trans  &trans &trans &trans &mo 3 
		&mt LCTRL N1  &mt LALT N2 &mt LGUI N3 &mt LSHFT N4 &kp N5 		&kp N6 &mt RSHFT N7 &mt RGUI N8 &mt RALT N9 &mt RCTRL N0
		&trans  &trans &trans &trans   &trans    			&trans &trans &trans &trans  &trans
					                &trans &to 0   				&to 1 &kp RSHIFT   
		>;
		};	
		
		tri_layer {
		bindings = <
		&kp NUM_1  &kp NUM_2    &kp NUM_3    &kp NUM_4    &kp NUM_5 			&trans &trans   &trans   &trans  &trans
		&kp F1 &kp F2 &kp F3 &kp F4 &kp F5  						&trans &kp PG_UP  &kp K_VOL_UP &kp K_MUTE &trans 
		&bt BT_CLR  &bt BT_NXT &bt BT_PRV &kp F6 &kp F7   				&trans &kp PG_DN  &kp K_VOL_DN  &trans &trans   
					 &trans &trans  					&trans &trans 
		>;
		};	
        
	};
};
